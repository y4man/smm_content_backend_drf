# Generated by Django 3.2 on 2024-12-09 17:43

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('marketing_director', 'Marketing Director'), ('marketing_manager', 'Marketing Manager'), ('marketing_assistant', 'Marketing Assistant'), ('graphics_designer', 'Graphics Designer'), ('content_writer', 'Content Writer'), ('account_manager', 'Account Manager'), ('accountant', 'Accountant')], default='user', max_length=20)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('agency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('profile', models.FileField(blank=True, null=True, upload_to='profiles/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('month_name', models.TextField()),
                ('strategy_completed', models.BooleanField(default=False)),
                ('content_completed', models.BooleanField(default=False)),
                ('creatives_completed', models.BooleanField(default=False)),
                ('mm_content_completed', models.BooleanField(default=False)),
                ('acc_creative_completed', models.BooleanField(default=False)),
                ('mm_creative_completed', models.BooleanField(default=False)),
                ('acc_content_completed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Client Calendar',
                'verbose_name_plural': 'Client Calendars',
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(max_length=255)),
                ('business_details', models.TextField(blank=True)),
                ('brand_key_points', models.TextField(blank=True)),
                ('business_address', models.CharField(max_length=255)),
                ('brand_guidelines_link', models.URLField(blank=True)),
                ('business_whatsapp_number', models.CharField(blank=True, max_length=20)),
                ('goals_objectives', models.TextField(blank=True)),
                ('business_email_address', models.EmailField(max_length=254)),
                ('target_region', models.CharField(max_length=255)),
                ('brand_guidelines_notes', models.TextField(blank=True)),
                ('business_offerings', models.CharField(choices=[('services', 'Services'), ('products', 'Products'), ('services_products', 'Services Products'), ('other', 'Other')], default='services', max_length=20)),
                ('ugc_drive_link', models.URLField(blank=True)),
                ('business_website', models.URLField(blank=True)),
                ('social_handles_facebook', models.URLField(blank=True)),
                ('social_handles_instagram', models.URLField(blank=True)),
                ('social_handles_other', models.JSONField(blank=True, default=list)),
                ('additional_notes', models.TextField(blank=True)),
                ('proposal_pdf', models.FileField(blank=True, null=True, upload_to='proposals/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('proposal_approval_status', models.CharField(blank=True, choices=[('approved', 'Approved'), ('declined', 'Declined'), ('changes_required', 'Changes Required')], max_length=20, null=True)),
                ('website_type', models.CharField(choices=[('ecommerce', 'Ecommerce'), ('services', 'Offer Services')], default='none', max_length=20)),
                ('num_of_products', models.IntegerField(blank=True, null=True)),
                ('membership', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('website_structure', models.TextField(blank=True, null=True)),
                ('design_preference', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('domain_info', models.CharField(blank=True, max_length=255, null=True)),
                ('hosting', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('hosting_info', models.CharField(blank=True, max_length=255, null=True)),
                ('graphic_assets', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('is_regular_update', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('is_self_update', models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='none', max_length=3)),
                ('additional_webdev_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('account_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('attribute_type', models.CharField(choices=[('post_type', 'Post Type'), ('post_cta', 'Post CTA'), ('post_category', 'Post Category')], max_length=50)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(choices=[('assign_team', 'Assign Team to Client'), ('create_proposal', 'Create Proposal'), ('approve_proposal', 'Approve Proposal'), ('schedule_brief_meeting', 'Schedule Brief Meeting'), ('create_strategy', 'Create Strategy'), ('content_writing', 'Content Writing'), ('approve_content_by_marketing_manager', 'Approve Content by Marketing Manager'), ('approve_content_by_account_manager', 'Approve Content by Account Manager'), ('creatives_design', 'Creatives Designing'), ('approve_creatives_by_marketing_manager', 'Approve Creatives by Marketing Manager'), ('approve_creatives_by_account_manager', 'Approve Creatives by Account Manager'), ('schedule_onboarding_meeting', 'Schedule Onboarding Meeting'), ('onboarding_meeting', 'Onboarding Meeting'), ('smo_scheduling', 'SMO & Scheduling'), ('invoice_submission', 'Invoice Submission'), ('payment_confirmation', 'Payment Confirmation'), ('monthly_report', 'Monthly Reporting')], max_length=50)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='pro_app.clients')),
            ],
        ),
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strategies', to='pro_app.clients')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=255)),
                ('pricing_attributes', models.JSONField(blank=True, default=dict, help_text='Key-value pairs for attributes like reel:100, post:200, etc.')),
                ('pricing_platforms', models.JSONField(blank=True, default=dict, help_text='Key-value pairs for platforms like facebook:200, instagram:150, etc.')),
                ('standard_attributes', models.JSONField(blank=True, default=dict, help_text='Key-value pairs for attributes like reel:100, post:200, etc.')),
                ('standard_plan_inclusion', models.TextField(blank=True, help_text="Details of what's included in the standard plan", null=True)),
                ('standard_netprice', models.IntegerField(help_text='Net price for the standard plan')),
                ('advanced_attributes', models.JSONField(blank=True, default=dict, help_text='Key-value pairs for attributes like reel:100, post:200, etc.')),
                ('advanced_plan_inclusion', models.TextField(blank=True, help_text="Details of what's included in the advanced plan", null=True)),
                ('advanced_netprice', models.IntegerField(help_text='Net price for the advanced plan')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('account_managers', models.ManyToManyField(blank=True, related_name='assigned_plans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Plan',
                'verbose_name_plural': 'Plans',
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The timestamp when the note was last updated.')),
                ('sender', models.ForeignKey(blank=True, help_text='The user who created the note.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notes', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(help_text='The team this note is related to.', on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='pro_app.team')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('time', models.TimeField()),
                ('meeting_name', models.CharField(max_length=255)),
                ('meeting_link', models.URLField(blank=True, max_length=500, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='pro_app.clients')),
                ('marketing_manager', models.ForeignKey(blank=True, limit_choices_to={'role': 'Marketing Manager'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('scheduled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_meetings', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='pro_app.team')),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
            },
        ),
        migrations.CreateModel(
            name='ClientWorkflowState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_step', models.CharField(choices=[('assign_team', 'Assign Team to Client'), ('create_proposal', 'Create Proposal'), ('approve_proposal', 'Approve Proposal'), ('schedule_brief_meeting', 'Schedule Brief Meeting'), ('create_strategy', 'Create Strategy'), ('content_writing', 'Content Writing'), ('approve_content_by_marketing_manager', 'Approve Content by Marketing Manager'), ('approve_content_by_account_manager', 'Approve Content by Account Manager'), ('creatives_design', 'Creatives Designing'), ('approve_creatives_by_marketing_manager', 'Approve Creatives by Marketing Manager'), ('approve_creatives_by_account_manager', 'Approve Creatives by Account Manager'), ('schedule_onboarding_meeting', 'Schedule Onboarding Meeting'), ('onboarding_meeting', 'Onboarding Meeting'), ('smo_scheduling', 'SMO & Scheduling'), ('invoice_submission', 'Invoice Submission'), ('payment_confirmation', 'Payment Confirmation'), ('monthly_report', 'Monthly Reporting')], max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pro_app.clients')),
            ],
        ),
        migrations.CreateModel(
            name='ClientStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='In Progress', max_length=50)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pro_app.clients')),
            ],
        ),
        migrations.CreateModel(
            name='ClientsPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(blank=True, max_length=255, null=True)),
                ('attributes', models.JSONField(blank=True, default=dict, help_text='Attributes of the plan')),
                ('platforms', models.JSONField(blank=True, default=dict, help_text='Platforms like Facebook, Instagram')),
                ('add_ons', models.JSONField(blank=True, default=dict, help_text='Additional add-ons for the plan')),
                ('grand_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_plans', to='pro_app.clients')),
            ],
        ),
        migrations.AddField(
            model_name='clients',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='pro_app.team'),
        ),
        migrations.CreateModel(
            name='ClientMessageThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_threads', to='pro_app.clients')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Message Thread',
                'verbose_name_plural': 'Client Message Threads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientInvoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_from', models.TextField(blank=True, null=True)),
                ('billing_to', models.TextField(blank=True, null=True)),
                ('invoice', models.FileField(blank=True, null=True, upload_to='invoices/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('submission_status', models.CharField(blank=True, choices=[('paid', 'PAID'), ('unpaid', 'UNPAID')], max_length=20, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients_invoices', to='pro_app.clients')),
            ],
        ),
        migrations.CreateModel(
            name='ClientCalendarDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('date', models.TextField()),
                ('post_count', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('cta', models.CharField(blank=True, max_length=255, null=True, verbose_name='Call to Action')),
                ('resource', models.TextField(blank=True, help_text='Strategy description for this post date', null=True)),
                ('tagline', models.CharField(blank=True, max_length=255, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('hashtags', models.TextField(blank=True, help_text='Use commas to separate hashtags', null=True)),
                ('e_hooks', models.TextField(blank=True, null=True, verbose_name='Engagement Hooks')),
                ('creatives_text', models.TextField(blank=True, help_text='Describe the creatives text', null=True)),
                ('creatives', models.FileField(blank=True, help_text='Upload the creatives file or provide a URL', null=True, upload_to='creatives/')),
                ('internal_status', models.JSONField(blank=True, default=dict)),
                ('client_approval', models.JSONField(blank=True, default=dict)),
                ('comments', models.TextField(blank=True, null=True)),
                ('collaboration', models.TextField(blank=True, null=True)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='pro_app.clientcalendar')),
            ],
            options={
                'verbose_name': 'Client Calendar Date',
                'verbose_name_plural': 'Client Calendar Dates',
            },
        ),
        migrations.AddField(
            model_name='clientcalendar',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='pro_app.clients'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='plans',
            field=models.ManyToManyField(blank=True, related_name='assigned_account_managers', to='pro_app.Plans'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='pro_app.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('team', 'user')},
            },
        ),
    ]
